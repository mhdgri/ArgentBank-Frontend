swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /user/accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Account Transactions
      description: API for fetching transactions of a specific account
      parameters:
        - in: path
          name: accountId
          description: Account ID
          required: true
          type: string
        - in: query
          name: month
          description: Month to filter transactions (YYYY-MM format)
          required: false
          type: string
          pattern: '^\d{4}-\d{2}$'
        - in: query
          name: page
          description: Page number for pagination
          required: false
          type: integer
          minimum: 1
          default: 1
        - in: query
          name: limit
          description: Number of transactions per page
          required: false
          type: integer
          minimum: 1
          maximum: 100
          default: 20
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Account not found
        '500':
          description: Internal Server Error

  /user/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Transaction Details
      description: API for fetching detailed information of a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: Transaction ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction Information
      description: API for updating modifiable transaction information (category and note only)
      parameters:
        - in: path
          name: transactionId
          description: Transaction ID
          required: true
          type: string
        - in: body
          name: body
          description: Transaction update payload
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  # ===== EXISTING USER DEFINITIONS =====
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  Transaction:
    type: object
    properties:
      id:
        type: string
        description: transaction ID
      accountId:
        type: string
        description: account ID
      date:
        type: string
        format: date
        description: transaction date
      description:
        type: string
        description: transaction description
      amount:
        type: number
        format: float
        description: transaction amount
      balance:
        type: number
        format: float
        description: account balance after transaction
      transactionType:
        type: string
        description: type of transaction
        enum: ['Electronic', 'Cash', 'Check', 'Transfer']
      category:
        type: string
        description: transaction category (modifiable)
        enum: ['Food', 'Transportation', 'Entertainment', 'Shopping', 'Health', 'Bills', 'Other']
      note:
        type: string
        description: user note (modifiable)

  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        description: transaction category
        enum: ['Food', 'Transportation', 'Entertainment', 'Shopping', 'Health', 'Bills', 'Other']
      note:
        type: string
        description: user note

  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/Transaction'

  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/definitions/Transaction'
          pagination:
            type: object
            properties:
              currentPage:
                type: integer
              totalPages:
                type: integer
              totalTransactions:
                type: integer
              hasNextPage:
                type: boolean
              hasPreviousPage:
                type: boolean